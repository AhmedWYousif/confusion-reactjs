{"version":3,"sources":["components/LoadingComponent.jsx","shared/baseUrl.js","components/MenuComponent.jsx","components/DishdetailComponent.jsx","components/HomeComponent.jsx","components/HeaderComponent.jsx","components/FooterComponent.jsx","components/ContactComponent.jsx","components/AboutComponent.jsx","redux/ActionCreators.js","redux/ActionTypes.js","components/MainComponent.jsx","redux/dishes.js","redux/comments.js","redux/promotions.js","redux/leaders.js","redux/forms.js","App.js","redux/configureStore.js","serviceWorker.js","index.js"],"names":["Loading","className","baseUrl","RenderMenuItem","dish","Card","to","id","CardImg","width","src","image","alt","name","CardImgOverlay","CardTitle","Menu","props","menu","dishes","map","key","isLoading","errMess","Breadcrumb","BreadcrumbItem","active","required","val","length","maxLength","len","RenderDish","in","transformProps","exitTransform","top","CardBody","CardText","description","RenderComments","comments","postComment","dishId","comment","author","Intl","DateTimeFormat","year","month","day","format","Date","date","CommentForm","state","isModalOpen","toggleModal","bind","handleSubmitComment","this","setState","values","rating","Button","outline","onClick","Modal","isOpen","toggle","ModalHeader","ModalBody","onSubmit","Row","Label","htmlFor","md","Col","select","model","defaultValue","placeholder","value","text","validators","minLength","show","messages","textarea","rows","size","offset","type","color","Component","DishDetail","RenderCard","item","designation","CardSubtitle","Home","dishesLoading","dishesErrMess","promotion","promoLoading","promoErrMess","leader","leaderLoading","leaderErrMess","Header","isNavOpen","toggleNav","handleLogin","event","alert","username","password","remember","checked","preventDefault","Navbar","dark","expand","NavbarToggler","NavbarBrand","href","height","Collapse","navbar","Nav","NavItem","Jumbotron","Form","FormGroup","Input","innerRef","input","check","Footer","isNumber","isNaN","Number","validEmail","test","Contact","handleSubmit","console","log","JSON","stringify","resetFeedbackForm","postFeedback","role","checkbox","About","RenderLeader","Media","tag","left","middle","object","body","heading","leaders","list","CardHeader","title","dishesFailed","errmess","payload","addDishes","commentsFailed","addComments","promosLoading","promosFailed","addPromos","promos","leadersLoading","leadersFailed","addLeaders","Main","fetchDishes","fetchComments","fetchPromos","fetchLeaders","selectedDish","TransitionGroup","CSSTransition","location","classNames","timeout","path","component","filter","featured","dishErrMess","promotions","promo","exact","match","parseInt","params","commentsErrMess","withRouter","connect","dispatch","newComment","toISOString","fetch","method","headers","credentials","then","response","ok","error","Error","status","statusText","json","addComment","catch","message","actions","reset","feedback","firstname","lastname","telnum","email","agree","contactType","newFeedback","Dishes","action","Comments","concat","Promotions","Leaders","InitialFeedback","store","createStore","combineReducers","createForms","applyMiddleware","thunk","logger","App","Boolean","window","hostname","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"yWAEaA,EAAU,WACnB,OACI,yBAAKC,UAAU,UACX,0BAAMA,UAAU,oDAChB,8CCNCC,EAAU,yBCMvB,SAASC,EAAT,GAAmC,IAATC,EAAQ,EAARA,KACtB,OACI,kBAACC,EAAA,EAAD,KACI,kBAAC,IAAD,CAAMC,GAAE,gBAAWF,EAAKG,KACpB,kBAACC,EAAA,EAAD,CAASC,MAAM,OAAOC,IAAKR,EAAUE,EAAKO,MAAOC,IAAKR,EAAKS,OAC3D,kBAACC,EAAA,EAAD,KACI,kBAACC,EAAA,EAAD,KAAYX,EAAKS,SAOrC,IAsDeG,EAtDF,SAACC,GAEV,IAAMC,EAAOD,EAAME,OAAOA,OAAOC,KAAI,SAAChB,GAClC,OACI,yBAAKiB,IAAKjB,EAAKG,GAAIN,UAAU,uBACzB,kBAACE,EAAD,CAAgBC,KAAMA,QAKlC,OAAIa,EAAME,OAAOG,UAGT,yBAAKrB,UAAU,aACX,yBAAKA,UAAU,OACX,kBAAC,EAAD,QAKPgB,EAAME,OAAOI,QAGd,yBAAKtB,UAAU,aACX,yBAAKA,UAAU,OACX,yBAAKA,UAAU,UACX,4BAAKgB,EAAME,OAAOI,YAQ9B,yBAAKtB,UAAU,aACX,yBAAKA,UAAU,OACX,kBAACuB,EAAA,EAAD,KACI,kBAACC,EAAA,EAAD,KAAgB,kBAAC,IAAD,CAAMnB,GAAG,SAAT,SAChB,kBAACmB,EAAA,EAAD,CAAgBC,QAAM,GAAtB,SAEJ,yBAAKzB,UAAU,UACX,oCACA,+BAGR,yBAAKA,UAAU,OACViB,K,uGCnDfS,EAAW,SAACC,GAAD,OAASA,GAAOA,EAAIC,QAC/BC,EAAY,SAACC,GAAD,OAAS,SAACH,GAAD,OAAWA,GAASA,EAAIC,QAAUE,IAI7D,SAASC,EAAT,GAA+B,IAAT5B,EAAQ,EAARA,KAElB,OACI,kBAAC,gBAAD,CAAe6B,IAAE,EACbC,eAAgB,CACZC,cAAe,gCAEnB,kBAAC9B,EAAA,EAAD,KACI,kBAACG,EAAA,EAAD,CAAS4B,KAAG,EAAC1B,IAAKR,EAAUE,EAAKO,MAAOC,IAAKR,EAAKS,OAClD,kBAACwB,EAAA,EAAD,KACI,kBAACtB,EAAA,EAAD,KAAYX,EAAKS,MACjB,kBAACyB,EAAA,EAAD,KAAWlC,EAAKmC,gBAQpC,SAASC,EAAT,GAA4D,IAAlCC,EAAiC,EAAjCA,SAAUC,EAAuB,EAAvBA,YAAaC,EAAU,EAAVA,OAC7C,OAAgB,MAAZF,EAEI,6BACI,wCACA,wBAAIxC,UAAU,iBACV,kBAAC,UAAD,CAASgC,IAAE,GACNQ,EAASrB,KAAI,SAAAwB,GAAO,OACjB,kBAAC,OAAD,CAAMX,IAAE,GACJ,wBAAIZ,IAAKuB,EAAQrC,IAAMqC,EAAQA,QAAQ,6BAAvC,MAAiDA,EAAQC,OAAzD,KAAmE,IAAIC,KAAKC,eAAe,QAAS,CAChGC,KAAM,UACNC,MAAO,OACPC,IAAK,YACNC,OAAO,IAAIC,KAAKR,EAAQS,cAK3C,kBAAC,EAAD,CAAaV,OAAQA,EAAQD,YAAaA,KAK9C,8B,IAMNY,E,YACF,WAAYrC,GAAQ,IAAD,8BACf,4CAAMA,KAEDsC,MAAQ,CACTC,aAAa,GAGjB,EAAKC,YAAc,EAAKA,YAAYC,KAAjB,gBACnB,EAAKC,oBAAsB,EAAKA,oBAAoBD,KAAzB,gBARZ,E,2EAYfE,KAAKC,SAAS,CAAEL,aAAcI,KAAKL,MAAMC,gB,0CAGzBM,GAChBF,KAAKH,cACLG,KAAK3C,MAAMyB,YAAYkB,KAAK3C,MAAM0B,OAAQmB,EAAOC,OAAQD,EAAOjB,OAAQiB,EAAOlB,W,+BAGzE,IAxEKb,EAwEN,OACL,OACI,oCACI,kBAACiC,EAAA,EAAD,CAAQC,SAAO,EAACC,QAASN,KAAKH,aAAa,0BAAMxD,UAAU,uBAA3D,oBACA,kBAACkE,EAAA,EAAD,CAAOC,OAAQR,KAAKL,MAAMC,YAAaa,OAAQT,KAAKH,aAChD,kBAACa,EAAA,EAAD,CAAaD,OAAQT,KAAKH,aAA1B,kBACA,kBAACc,EAAA,EAAD,KACI,kBAAC,YAAD,CAAWC,SAAU,SAACV,GAAD,OAAY,EAAKH,oBAAoBG,KACtD,kBAACW,EAAA,EAAD,CAAKxE,UAAU,cACX,kBAACyE,EAAA,EAAD,CAAOC,QAAQ,SAASC,GAAI,IAA5B,UACA,kBAACC,EAAA,EAAD,CAAKD,GAAI,IACL,kBAAC,UAAQE,OAAT,CAAgBC,MAAM,UAAUC,aAAa,IAAIzE,GAAG,SAASM,KAAK,SAASoE,YAAY,SAAShF,UAAU,gBACtG,4BAAQiF,MAAM,KAAd,KACA,4BAAQA,MAAM,KAAd,KACA,4BAAQA,MAAM,KAAd,KACA,4BAAQA,MAAM,KAAd,KACA,4BAAQA,MAAM,KAAd,QAIZ,kBAACT,EAAA,EAAD,CAAKxE,UAAU,cACX,kBAACyE,EAAA,EAAD,CAAOC,QAAQ,SAASC,GAAI,IAA5B,aACA,kBAACC,EAAA,EAAD,CAAKD,GAAI,IACL,kBAAC,UAAQO,KAAT,CAAcJ,MAAM,UAAUxE,GAAG,SAASM,KAAK,SAASoE,YAAY,YAAYhF,UAAU,eACtFmF,WAAY,CACRzD,WACA0D,WAlGzBtD,EAkG8C,EAlGtC,SAACH,GAAD,OAASA,GAAQA,EAAIC,QAAUE,IAmGdD,UAAWA,EAAU,OAG7B,kBAAC,SAAD,CAAQ7B,UAAU,cAAc8E,MAAM,UAAUO,KAAK,UACjDC,SAAU,CACN5D,SAAU,WACV0D,UAAW,oCACXvD,UAAW,qCAK3B,kBAAC2C,EAAA,EAAD,CAAKxE,UAAU,cACX,kBAACyE,EAAA,EAAD,CAAOC,QAAQ,UAAUC,GAAI,IAA7B,WACA,kBAACC,EAAA,EAAD,CAAKD,GAAI,IACL,kBAAC,UAAQY,SAAT,CAAkBT,MAAM,WAAWxE,GAAG,UAAUM,KAAK,UAAU4E,KAAK,IAAIxF,UAAU,mBAG1F,kBAACwE,EAAA,EAAD,CAAKxE,UAAU,cACX,kBAAC4E,EAAA,EAAD,CAAKD,GAAI,CAAEc,KAAM,GAAIC,OAAQ,IACzB,kBAAC3B,EAAA,EAAD,CAAQ4B,KAAK,SAASC,MAAM,WAA5B,sB,GApEVC,aAkIXC,EAnDI,SAAC9E,GAEhB,OAAIA,EAAMK,UAGF,yBAAKrB,UAAU,aACX,yBAAKA,UAAU,OACX,kBAAC,EAAD,QAKPgB,EAAMM,QAGP,yBAAKtB,UAAU,aACX,yBAAKA,UAAU,OACX,4BAAKgB,EAAMM,WAKJ,MAAdN,EAAMb,KAEP,yBAAKH,UAAU,aACX,yBAAKA,UAAU,OACX,kBAACuB,EAAA,EAAD,KACI,kBAACC,EAAA,EAAD,KAAgB,kBAAC,IAAD,CAAMnB,GAAG,SAAT,SAChB,kBAACmB,EAAA,EAAD,CAAgBC,QAAM,GAAET,EAAMb,KAAKS,OAEvC,yBAAKZ,UAAU,UACX,4BAAKgB,EAAMb,KAAKS,MAChB,+BAGR,yBAAKZ,UAAU,OACX,yBAAKA,UAAU,uBACX,kBAAC+B,EAAD,CAAY5B,KAAMa,EAAMb,QAE5B,yBAAKH,UAAU,uBACX,kBAACuC,EAAD,CAAgBC,SAAUxB,EAAMwB,SAAUC,YAAazB,EAAMyB,YAAaC,OAAQ1B,EAAMb,KAAKG,QAOzG,+B,SCxLZ,SAASyF,EAAT,GAAmD,IAA7BC,EAA4B,EAA5BA,KAAM3E,EAAsB,EAAtBA,UAAWC,EAAW,EAAXA,QACnC,OAAID,EAGI,kBAAC,EAAD,MAGCC,EAGD,4BAAKA,GAKL,kBAAC,gBAAD,CACIU,IAAE,EACFC,eAAgB,CACZC,cAAe,gCAEnB,kBAAC9B,EAAA,EAAD,KACI,kBAACG,EAAA,EAAD,CAASE,IAAKR,EAAU+F,EAAKtF,MAAOC,IAAKqF,EAAKpF,OAC9C,kBAACwB,EAAA,EAAD,KACI,kBAACtB,EAAA,EAAD,KAAYkF,EAAKpF,MAChBoF,EAAKC,YAAc,kBAACC,EAAA,EAAD,KAAeF,EAAKC,aAA8B,KACtE,kBAAC5D,EAAA,EAAD,KAAW2D,EAAK1D,gBA0BzB6D,MAlBf,SAAcnF,GACV,OACI,yBAAKhB,UAAU,aACX,yBAAKA,UAAU,yBACX,yBAAKA,UAAU,qBACX,kBAAC+F,EAAD,CAAYC,KAAMhF,EAAMb,KAAMkB,UAAWL,EAAMoF,cAAe9E,QAASN,EAAMqF,iBAEjF,yBAAKrG,UAAU,qBACX,kBAAC+F,EAAD,CAAYC,KAAMhF,EAAMsF,UAAWjF,UAAWL,EAAMuF,aAAcjF,QAASN,EAAMwF,gBAErF,yBAAKxG,UAAU,qBACX,kBAAC+F,EAAD,CAAYC,KAAMhF,EAAMyF,OAAQpF,UAAWL,EAAM0F,cAAepF,QAASN,EAAM2F,oB,0FCuDpFC,G,YAvGX,WAAY5F,GAAQ,IAAD,8BACf,4CAAMA,KAEDsC,MAAQ,CACTuD,WAAW,EACXtD,aAAa,GAGjB,EAAKuD,UAAY,EAAKA,UAAUrD,KAAf,gBACjB,EAAKD,YAAc,EAAKA,YAAYC,KAAjB,gBACnB,EAAKsD,YAAc,EAAKA,YAAYtD,KAAjB,gBAVJ,E,yEAcfE,KAAKC,SAAS,CACViD,WAAYlD,KAAKL,MAAMuD,c,oCAK3BlD,KAAKC,SAAS,CACVL,aAAcI,KAAKL,MAAMC,gB,kCAIrByD,GACRrD,KAAKH,cACLyD,MAAM,aAAetD,KAAKuD,SAASjC,MAAQ,cAAgBtB,KAAKwD,SAASlC,MACnE,cAAgBtB,KAAKyD,SAASC,SACpCL,EAAMM,mB,+BAIA,IAAD,OACL,OACI,oCACI,kBAACC,EAAA,EAAD,CAAQC,MAAI,EAACC,OAAO,MAChB,yBAAKzH,UAAU,aACX,kBAAC0H,EAAA,EAAD,CAAezD,QAASN,KAAKmD,YAC7B,kBAACa,EAAA,EAAD,CAAa3H,UAAU,UAAU4H,KAAK,KAAI,yBAAKnH,IAAI,yBAAyBoH,OAAO,KAAKrH,MAAM,KAAKG,IAAI,2BACvG,kBAACmH,EAAA,EAAD,CAAU3D,OAAQR,KAAKL,MAAMuD,UAAWkB,QAAM,GAC1C,kBAACC,EAAA,EAAD,CAAKD,QAAM,GACP,kBAACE,EAAA,EAAD,KACI,kBAAC,IAAD,CAASjI,UAAU,WAAWK,GAAG,SAAQ,0BAAML,UAAU,qBAAzD,UAEJ,kBAACiI,EAAA,EAAD,KACI,kBAAC,IAAD,CAASjI,UAAU,WAAWK,GAAG,YAAW,0BAAML,UAAU,qBAA5D,cAEJ,kBAACiI,EAAA,EAAD,KACI,kBAAC,IAAD,CAASjI,UAAU,WAAWK,GAAG,SAAQ,0BAAML,UAAU,qBAAzD,UAEJ,kBAACiI,EAAA,EAAD,KACI,kBAAC,IAAD,CAASjI,UAAU,WAAWK,GAAG,cAAa,0BAAML,UAAU,6BAA9D,iBAGR,kBAACgI,EAAA,EAAD,CAAKhI,UAAU,UAAU+H,QAAM,GAC3B,kBAACE,EAAA,EAAD,KACI,kBAAClE,EAAA,EAAD,CAAQC,SAAO,EAACC,QAASN,KAAKH,aAAa,0BAAMxD,UAAU,wBAA3D,eAMpB,kBAACkI,EAAA,EAAD,KACI,yBAAKlI,UAAU,aACX,yBAAKA,UAAU,kBACX,yBAAKA,UAAU,mBACX,qDACA,yLAKhB,kBAACkE,EAAA,EAAD,CAAOC,OAAQR,KAAKL,MAAMC,YAAaa,OAAQT,KAAKH,aAChD,kBAACa,EAAA,EAAD,CAAaD,OAAQT,KAAKH,aAA1B,SACA,kBAACc,EAAA,EAAD,KACI,kBAAC6D,EAAA,EAAD,CAAM5D,SAAUZ,KAAKoD,aACjB,kBAACqB,EAAA,EAAD,KACI,kBAAC3D,EAAA,EAAD,CAAOC,QAAQ,YAAf,YACA,kBAAC2D,EAAA,EAAD,CAAO1C,KAAK,OAAOrF,GAAG,WAAWM,KAAK,WAClC0H,SAAU,SAACC,GAAD,OAAW,EAAKrB,SAAWqB,MAE7C,kBAACH,EAAA,EAAD,KACI,kBAAC3D,EAAA,EAAD,CAAOC,QAAQ,YAAf,YACA,kBAAC2D,EAAA,EAAD,CAAO1C,KAAK,WAAWrF,GAAG,WAAWM,KAAK,WACtC0H,SAAU,SAACC,GAAD,OAAW,EAAKpB,SAAWoB,MAE7C,kBAACH,EAAA,EAAD,CAAWI,OAAK,GACZ,kBAAC/D,EAAA,EAAD,CAAO+D,OAAK,GACR,kBAACH,EAAA,EAAD,CAAO1C,KAAK,WAAW/E,KAAK,WACxB0H,SAAU,SAACC,GAAD,OAAW,EAAKnB,SAAWmB,KAF7C,gBAMJ,kBAACxE,EAAA,EAAD,CAAQ4B,KAAK,SAASV,MAAM,SAASW,MAAM,WAA3C,iB,GA/FPC,aCoDN4C,GApDA,WAGX,OACI,oCACI,yBAAKzI,UAAU,UACX,yBAAKA,UAAU,aACX,yBAAKA,UAAU,8BACX,yBAAKA,UAAU,2BACX,qCACA,wBAAIA,UAAU,iBACV,4BAAI,kBAAC,IAAD,CAAMK,GAAG,SAAT,SACJ,4BAAI,kBAAC,IAAD,CAAMA,GAAG,YAAT,aACJ,4BAAI,kBAAC,IAAD,CAAMA,GAAG,SAAT,SACJ,4BAAI,kBAAC,IAAD,CAAMA,GAAG,cAAT,iBAGZ,yBAAKL,UAAU,kBACX,2CACA,6DAC6B,6BAD7B,2BAE4B,6BAF5B,YAGa,6BACT,uBAAGA,UAAU,sBAJjB,mBAIyD,6BACrD,uBAAGA,UAAU,oBALjB,mBAKuD,6BACnD,uBAAGA,UAAU,yBANjB,KAM8C,uBAAG4H,KAAK,6BAAR,wBAIlD,yBAAK5H,UAAU,qCACX,yBAAKA,UAAU,eACX,uBAAGA,UAAU,iCAAiC4H,KAAK,uBAAsB,uBAAG5H,UAAU,uBACtF,uBAAGA,UAAU,mCAAmC4H,KAAK,2CAA0C,uBAAG5H,UAAU,oBAC5G,uBAAGA,UAAU,mCAAmC4H,KAAK,+BAA8B,uBAAG5H,UAAU,oBAChG,uBAAGA,UAAU,kCAAkC4H,KAAK,uBAAsB,uBAAG5H,UAAU,mBACvF,uBAAGA,UAAU,iCAAiC4H,KAAK,uBAAsB,uBAAG5H,UAAU,mBACtF,uBAAGA,UAAU,sBAAsB4H,KAAK,WAAU,uBAAG5H,UAAU,yBAI3E,yBAAKA,UAAU,8BACX,yBAAKA,UAAU,YACX,8ECvCtB0B,GAAW,SAACC,GAAD,OAASA,GAAOA,EAAIC,QAC/BC,GAAY,SAACC,GAAD,OAAS,SAACH,GAAD,OAAWA,GAASA,EAAIC,QAAUE,IACvDsD,GAAY,SAACtD,GAAD,OAAS,SAACH,GAAD,OAASA,GAAQA,EAAIC,QAAUE,IACpD4G,GAAW,SAAC/G,GAAD,OAAUgH,MAAMC,OAAOjH,KAClCkH,GAAa,SAAClH,GAAD,MAAS,4CAA4CmH,KAAKnH,IAkM9DoH,G,YA7LX,WAAY/H,GAAQ,IAAD,8BACf,4CAAMA,KACDgI,aAAe,EAAKA,aAAavF,KAAlB,gBAFL,E,0EAINI,GACToF,QAAQC,IAAI,qBAAuBC,KAAKC,UAAUvF,IAClDF,KAAK3C,MAAMqI,oBACX1F,KAAK3C,MAAMsI,aAAazF,K,+BAIlB,IAAD,OAGL,OACI,yBAAK7D,UAAU,aACX,yBAAKA,UAAU,OACX,kBAACuB,EAAA,EAAD,KACI,kBAACC,EAAA,EAAD,KAAgB,kBAAC,IAAD,CAAMnB,GAAG,SAAT,SAChB,kBAACmB,EAAA,EAAD,CAAgBC,QAAM,GAAtB,eAEJ,yBAAKzB,UAAU,UACX,0CACA,+BAGR,yBAAKA,UAAU,mBACX,yBAAKA,UAAU,UACX,qDAEJ,yBAAKA,UAAU,+BACX,2CACA,6DAC6B,6BAD7B,2BAE4B,6BAF5B,YAGa,6BACT,uBAAGA,UAAU,gBAJjB,mBAImD,6BAC/C,uBAAGA,UAAU,cALjB,mBAKiD,6BAC7C,uBAAGA,UAAU,mBANjB,KAMwC,uBAAG4H,KAAK,6BAAR,wBAG5C,yBAAK5H,UAAU,+BACX,oDAEJ,yBAAKA,UAAU,gCACX,yBAAKA,UAAU,YAAYuJ,KAAK,SAC5B,uBAAGA,KAAK,SAASvJ,UAAU,kBAAkB4H,KAAK,oBAAmB,uBAAG5H,UAAU,gBAAlF,SACA,uBAAGuJ,KAAK,SAASvJ,UAAU,eAAe4H,KAAK,KAAI,uBAAG5H,UAAU,gBAAhE,UACA,uBAAGuJ,KAAK,SAASvJ,UAAU,kBAAkB4H,KAAK,6BAA4B,uBAAG5H,UAAU,qBAA3F,aAIZ,yBAAKA,UAAU,mBACX,yBAAKA,UAAU,UACX,sDAEJ,yBAAKA,UAAU,mBACX,kBAAC,OAAD,CAAM8E,MAAM,WAAWP,SAAU,SAACV,GAAD,OAAY,EAAKmF,aAAanF,KAC3D,kBAACW,EAAA,EAAD,CAAKxE,UAAU,cACX,kBAACyE,EAAA,EAAD,CAAOC,QAAQ,YAAYC,GAAI,GAA/B,cACA,kBAACC,EAAA,EAAD,CAAKD,GAAI,IACL,kBAAC,UAAQO,KAAT,CAAcJ,MAAM,aAAaxE,GAAG,YAAYM,KAAK,YACjDoE,YAAY,aACZhF,UAAU,eACVmF,WAAY,CACRzD,YAAU0D,UAAWA,GAAU,GAAIvD,UAAWA,GAAU,OAGhE,kBAAC,SAAD,CACI7B,UAAU,cACV8E,MAAM,aACNO,KAAK,UACLC,SAAU,CACN5D,SAAU,WACV0D,UAAW,oCACXvD,UAAW,qCAK3B,kBAAC2C,EAAA,EAAD,CAAKxE,UAAU,cACX,kBAACyE,EAAA,EAAD,CAAOC,QAAQ,WAAWC,GAAI,GAA9B,aACA,kBAACC,EAAA,EAAD,CAAKD,GAAI,IACL,kBAAC,UAAQO,KAAT,CAAcJ,MAAM,YAAYxE,GAAG,WAAWM,KAAK,WAC/CoE,YAAY,YACZhF,UAAU,eACVmF,WAAY,CACRzD,YAAU0D,UAAWA,GAAU,GAAIvD,UAAWA,GAAU,OAGhE,kBAAC,SAAD,CACI7B,UAAU,cACV8E,MAAM,YACNO,KAAK,UACLC,SAAU,CACN5D,SAAU,WACV0D,UAAW,oCACXvD,UAAW,qCAK3B,kBAAC2C,EAAA,EAAD,CAAKxE,UAAU,cACX,kBAACyE,EAAA,EAAD,CAAOC,QAAQ,SAASC,GAAI,GAA5B,gBACA,kBAACC,EAAA,EAAD,CAAKD,GAAI,IACL,kBAAC,UAAQO,KAAT,CAAcJ,MAAM,UAAUxE,GAAG,SAASM,KAAK,SAC3CoE,YAAY,cACZhF,UAAU,eACVmF,WAAY,CACRzD,YAAU0D,UAAWA,GAAU,GAAIvD,UAAWA,GAAU,IAAK6G,eAGrE,kBAAC,SAAD,CACI1I,UAAU,cACV8E,MAAM,UACNO,KAAK,UACLC,SAAU,CACN5D,SAAU,WACV0D,UAAW,iCACXvD,UAAW,6BACX6G,SAAU,wBAK1B,kBAAClE,EAAA,EAAD,CAAKxE,UAAU,cACX,kBAACyE,EAAA,EAAD,CAAOC,QAAQ,QAAQC,GAAI,GAA3B,SACA,kBAACC,EAAA,EAAD,CAAKD,GAAI,IACL,kBAAC,UAAQO,KAAT,CAAcJ,MAAM,SAASxE,GAAG,QAAQM,KAAK,QACzCoE,YAAY,QACZhF,UAAU,eACVmF,WAAY,CACRzD,YAAUmH,iBAGlB,kBAAC,SAAD,CACI7I,UAAU,cACV8E,MAAM,SACNO,KAAK,UACLC,SAAU,CACN5D,SAAU,WACVmH,WAAY,6BAK5B,kBAACrE,EAAA,EAAD,CAAKxE,UAAU,cACX,kBAAC4E,EAAA,EAAD,CAAKD,GAAI,CAAEc,KAAM,EAAGC,OAAQ,IACxB,yBAAK1F,UAAU,cACX,kBAACyE,EAAA,EAAD,CAAO+D,OAAK,GACR,kBAAC,UAAQgB,SAAT,CAAkB1E,MAAM,SAASlE,KAAK,QAClCZ,UAAU,qBAFlB,IAGQ,IACJ,0DAIZ,kBAAC4E,EAAA,EAAD,CAAKD,GAAI,CAAEc,KAAM,EAAGC,OAAQ,IACxB,kBAAC,UAAQb,OAAT,CAAgBC,MAAM,eAAelE,KAAK,cACtCZ,UAAU,gBACV,wCACA,4CAIZ,kBAACwE,EAAA,EAAD,CAAKxE,UAAU,cACX,kBAACyE,EAAA,EAAD,CAAOC,QAAQ,UAAUC,GAAI,GAA7B,iBACA,kBAACC,EAAA,EAAD,CAAKD,GAAI,IACL,kBAAC,UAAQY,SAAT,CAAkBT,MAAM,WAAWxE,GAAG,UAAUM,KAAK,UACjD4E,KAAK,KACLxF,UAAU,mBAGtB,kBAACwE,EAAA,EAAD,CAAKxE,UAAU,cACX,kBAAC4E,EAAA,EAAD,CAAKD,GAAI,CAAEc,KAAM,GAAIC,OAAQ,IACzB,kBAAC3B,EAAA,EAAD,CAAQ4B,KAAK,SAASC,MAAM,WAA5B,2B,GAlLdC,a,oBC2GP4D,OA1Gf,SAAezI,GAEX,SAAS0I,EAAT,GAAmC,IAAXjD,EAAU,EAAVA,OAEpB,OACI,yBAAKrF,IAAKqF,EAAOnG,GAAIN,UAAU,eAC3B,kBAAC2J,GAAA,EAAD,CAAOC,IAAI,MACP,kBAACD,GAAA,EAAD,CAAOE,MAAI,EAACC,QAAM,GACd,kBAACH,GAAA,EAAD,CAAOI,QAAM,EAACtJ,IAAKR,EAAUwG,EAAO/F,MAAOC,IAAK8F,EAAO7F,QAE3D,kBAAC+I,GAAA,EAAD,CAAOK,MAAI,EAAChK,UAAU,QAClB,kBAAC2J,GAAA,EAAD,CAAOM,SAAO,GAAExD,EAAO7F,MACvB,2BAAI6F,EAAOR,aACX,2BAAIQ,EAAOnE,gBAQ/B,IAAI4H,EAyBJ,OArBIA,EAFAlJ,EAAMkJ,QAAQ7I,UAEH,kBAAC,EAAD,MAENL,EAAMkJ,QAAQ5I,QAER,yBAAKtB,UAAU,UAAf,IAAyB,4BAAKgB,EAAMkJ,QAAQ5I,SAA5C,KAIA,yBAAKtB,UAAU,UACtB,kBAAC2J,GAAA,EAAD,CAAOQ,MAAI,GACP,kBAAC,UAAD,CAASnI,IAAE,GACNhB,EAAMkJ,QAAQA,QAAQ/I,KAAI,SAACsF,GAAD,OACvB,kBAAC,OAAD,CAAMzE,IAAE,GACJ,kBAAC0H,EAAD,CAActI,IAAKqF,EAAOnG,GAAImG,OAAQA,WAS1D,yBAAKzG,UAAU,aACX,yBAAKA,UAAU,OACX,kBAACuB,EAAA,EAAD,KACI,kBAACC,EAAA,EAAD,KAAgB,kBAAC,IAAD,CAAMnB,GAAG,SAAT,SAChB,kBAACmB,EAAA,EAAD,CAAgBC,QAAM,GAAtB,aAEJ,yBAAKzB,UAAU,UACX,wCACA,+BAGR,yBAAKA,UAAU,mBACX,yBAAKA,UAAU,mBACX,2CACA,waACA,6EAAkD,8CAAlD,iIAEJ,yBAAKA,UAAU,mBACX,kBAACI,EAAA,EAAD,KACI,kBAACgK,GAAA,EAAD,CAAYpK,UAAU,yBAAtB,qBACA,kBAACoC,EAAA,EAAD,KACI,wBAAIpC,UAAU,WACV,wBAAIA,UAAU,SAAd,WACA,wBAAIA,UAAU,SAAd,eACA,wBAAIA,UAAU,SAAd,sBACA,wBAAIA,UAAU,SAAd,sBACA,wBAAIA,UAAU,SAAd,wBACA,wBAAIA,UAAU,SAAd,cACA,wBAAIA,UAAU,SAAd,aACA,wBAAIA,UAAU,SAAd,UAKhB,yBAAKA,UAAU,UACX,kBAACI,EAAA,EAAD,KACI,kBAACgC,EAAA,EAAD,CAAUpC,UAAU,YAChB,gCAAYA,UAAU,cAClB,uBAAGA,UAAU,QAAb,qFAEA,4BAAQA,UAAU,qBAAlB,cACA,0BAAMqK,MAAM,gBAAZ,0EAQpB,yBAAKrK,UAAU,mBACX,yBAAKA,UAAU,UACX,qDAEHkK,K,kBC5CJ9D,GAAgB,iBAAO,CAChCT,KCrE0B,mBDwEjB2E,GAAe,SAACC,GAAD,MAAc,CACtC5E,KCxEyB,gBDyEzB6E,QAASD,IAGAE,GAAY,SAACvJ,GAAD,MAAa,CAClCyE,KC5EsB,aD6EtB6E,QAAStJ,IAyBAwJ,GAAiB,SAACH,GAAD,MAAc,CACxC5E,KCrG2B,kBDsG3B6E,QAASD,IAGAI,GAAc,SAACnI,GAAD,MAAe,CACtCmD,KC3GwB,eD4GxB6E,QAAShI,IA6BAoI,GAAgB,iBAAO,CAChCjF,KCxI0B,mBD2IjBkF,GAAe,SAACN,GAAD,MAAc,CACtC5E,KC1IyB,gBD2IzB6E,QAASD,IAGAO,GAAY,SAACC,GAAD,MAAa,CAClCpF,KChJsB,aDiJtB6E,QAASO,IA6BAC,GAAiB,iBAAO,CACjCrF,KC5K2B,oBD+KlBsF,GAAgB,SAACV,GAAD,MAAc,CACvC5E,KC/K0B,iBDgL1B6E,QAASD,IAGAW,GAAa,SAAChB,GAAD,MAAc,CACpCvE,KCnLuB,cDoLvB6E,QAASN,I,kBE9JPiB,G,YAGF,WAAYnK,GAAO,2BACf,0CAAMA,I,iFAIN2C,KAAK3C,MAAMoK,cACXzH,KAAK3C,MAAMqK,gBACX1H,KAAK3C,MAAMsK,cACX3H,KAAK3C,MAAMuK,iB,mCAGF7I,GACTiB,KAAKC,SAAS,CAAE4H,aAAc9I,M,+BAKxB,IAAD,OA+BL,OACI,6BACI,kBAAC,GAAD,MACA,kBAAC+I,GAAA,EAAD,KACI,kBAACC,GAAA,EAAD,CAAetK,IAAKuC,KAAK3C,MAAM2K,SAASvK,IAAKwK,WAAW,OAAOC,QAAS,KACpE,kBAAC,KAAD,CAAQF,SAAUhI,KAAK3C,MAAM2K,UACzB,kBAAC,KAAD,CAAOG,KAAK,QAAQC,UAnCvB,WACb,OACI,kBAAC,EAAD,CACI5L,KAAM,EAAKa,MAAME,OAAOA,OAAO8K,QAAO,SAAC7L,GAAD,OAAUA,EAAK8L,YAAU,GAC/D7F,cAAe,EAAKpF,MAAME,OAAOG,UACjC6K,YAAa,EAAKlL,MAAME,OAAOI,QAC/BgF,UAAW,EAAKtF,MAAMmL,WAAWA,WAAWH,QAAO,SAACI,GAAD,OAAWA,EAAMH,YAAU,GAC9E1F,aAAc,EAAKvF,MAAMmL,WAAW9K,UACpCmF,aAAc,EAAKxF,MAAMmL,WAAW7K,QACpCmF,OAAQ,EAAKzF,MAAMkJ,QAAQA,QAAQ8B,QAAO,SAACvF,GAAD,OAAYA,EAAOwF,YAAU,GACvEvF,cAAe,EAAK1F,MAAMkJ,QAAQ7I,UAClCsF,cAAe,EAAK3F,MAAMkJ,QAAQ5I,aAyB1B,kBAAC,KAAD,CAAO+K,OAAK,EAACP,KAAK,QAAQC,UAAW,kBAAM,kBAAC,EAAD,CAAM7K,OAAQ,EAAKF,MAAME,YACpE,kBAAC,KAAD,CAAOmL,OAAK,EAACP,KAAK,aAAaC,UAAW,kBAAM,kBAAC,GAAD,CAAS1C,kBAAmB,EAAKrI,MAAMqI,kBAAmBC,aAAc,EAAKtI,MAAMsI,kBACnI,kBAAC,KAAD,CAAO+C,OAAK,EAACP,KAAK,WAAWC,UAAW,kBAAM,kBAAC,GAAD,CAAS7B,QAAS,EAAKlJ,MAAMkJ,aAC3E,kBAAC,KAAD,CAAO4B,KAAK,gBAAgBC,UAvB7B,SAAC,GAAe,IAAbO,EAAY,EAAZA,MAClB,OACI,kBAAC,EAAD,CACInM,KAAM,EAAKa,MAAME,OAAOA,OAAO8K,QAAO,SAAC7L,GAAD,OAAUA,EAAKG,KAAOiM,SAASD,EAAME,OAAO9J,OAAQ,OAAK,GAC/FrB,UAAW,EAAKL,MAAME,OAAOG,UAC7BC,QAAS,EAAKN,MAAME,OAAOI,QAC3BkB,SAAU,EAAKxB,MAAMwB,SAASA,SAASwJ,QAAO,SAACrJ,GAAD,OAAaA,EAAQD,SAAW6J,SAASD,EAAME,OAAO9J,OAAQ,OAC5G+J,gBAAiB,EAAKzL,MAAMwB,SAASlB,QACrCmB,YAAa,EAAKzB,MAAMyB,iBAgBhB,kBAAC,KAAD,CAAUpC,GAAG,aAIzB,kBAAC,GAAD,W,GAlEGwF,aAyEJ6G,gBAAWC,oBA7FF,SAAArJ,GACpB,MAAO,CACHpC,OAAQoC,EAAMpC,OACdsB,SAAUc,EAAMd,SAChB2J,WAAY7I,EAAM6I,WAClBjC,QAAS5G,EAAM4G,YAII,SAAA0C,GAAQ,MAAK,CACpCnK,YAAa,SAACC,EAAQoB,EAAQlB,EAAQD,GAAzB,OAAqCiK,EFjB3B,SAAClK,EAAQoB,EAAQlB,EAAQD,GAAzB,OAAqC,SAACiK,GAE7D,IAAMC,EAAa,CACfnK,OAAQA,EACRoB,OAAQA,EACRlB,OAAQA,EACRD,QAASA,GAIb,OAFAkK,EAAWzJ,MAAO,IAAID,MAAO2J,cAEtBC,MAAM9M,EAAU,WAAY,CAC/B+M,OAAQ,OACRhD,KAAMb,KAAKC,UAAUyD,GACrBI,QAAS,CACL,eAAgB,oBAEpBC,YAAa,gBAEZC,MAAK,SAAAC,GACF,GAAIA,EAASC,GAET,OAAOD,EAGP,IAAIE,EAAQ,IAAIC,MAAJ,gBAAmBH,EAASI,OAA5B,aAAuCJ,EAASK,aAE5D,MADAH,EAAMF,SAAWA,EACXE,KAGV,SAAAA,GACI,MAAMA,KAEbH,MAAK,SAAAC,GAAQ,OAAIA,EAASM,UAC1BP,MAAK,SAAAC,GAAQ,OAAIR,EAtCA,SAACjK,GAAD,MAAc,CACpCgD,KCJuB,cDKvB6E,QAAS7H,GAoCsBgL,CAAWP,OACrCQ,OAAM,SAAAN,GAAWrE,QAAQC,IAAI,gBAAiBoE,EAAMO,SAAU5G,MAAM,4CAA8CqG,EAAMO,aEjBlEpL,CAAYC,EAAQoB,EAAQlB,EAAQD,KAC/FyI,YAAa,WAAQwB,GFmBQ,SAACA,GAI9B,OAFAA,EAASxG,IAAc,IAEhB2G,MAAM9M,EAAU,UAClBkN,MAAK,SAAAC,GACF,GAAIA,EAASC,GAET,OAAOD,EAGP,IAAIE,EAAQ,IAAIC,MAAJ,gBAAmBH,EAASI,OAA5B,aAAuCJ,EAASK,aAE5D,MADAH,EAAMF,SAAWA,EACXE,KAGV,SAAAA,GAEI,MADc,IAAIC,MAAMD,EAAMO,YAGrCV,MAAK,SAAAC,GAAQ,OAAIA,EAASM,UAC1BP,MAAK,SAAAjM,GAAM,OAAI0L,EAASnC,GAAUvJ,OAClC0M,OAAM,SAAAN,GAAK,OAAIV,EAAStC,GAAagD,EAAMO,iBExChDxE,kBAAmB,WAAQuD,EAASkB,UAAQC,MAAM,cAClD1C,cAAe,kBAAMuB,GFwDU,SAACA,GAChC,OAAOG,MAAM9M,EAAU,YAClBkN,MAAK,SAAAC,GACF,GAAIA,EAASC,GAET,OAAOD,EAGP,IAAIE,EAAQ,IAAIC,MAAM,SAAWH,EAASI,OAAS,KAAOJ,EAASK,YAEnE,MADAH,EAAMF,SAAWA,EACXE,KAGV,SAAAA,GAEI,MADc,IAAIC,MAAMD,EAAMO,YAGrCV,MAAK,SAAAC,GAAQ,OAAIA,EAASM,UAC1BP,MAAK,SAAA3K,GAAQ,OAAIoK,EAASjC,GAAYnI,OACtCoL,OAAM,SAAAN,GAAK,OAAIV,EAASlC,GAAe4C,EAAMO,iBE1ElDvC,YAAa,kBAAMsB,GFuFU,SAACA,GAI9B,OAFAA,EAAShC,MAEFmC,MAAM9M,EAAU,cAClBkN,MAAK,SAAAC,GACF,GAAIA,EAASC,GAET,OAAOD,EAGP,IAAIE,EAAQ,IAAIC,MAAM,SAAWH,EAASI,OAAS,KAAOJ,EAASK,YAEnE,MADAH,EAAMF,SAAWA,EACXE,KAGV,SAAAA,GAEI,MADc,IAAIC,MAAMD,EAAMO,YAGrCV,MAAK,SAAAC,GAAQ,OAAIA,EAASM,UAC1BP,MAAK,SAAApC,GAAM,OAAI6B,EAAS9B,GAAUC,OAClC6C,OAAM,SAAAN,GAAK,OAAIV,EAAS/B,GAAayC,EAAMO,iBE5GhDtC,aAAc,kBAAMqB,GF+HU,SAACA,GAI/B,OAFAA,EAAS5B,IAAe,IAEjB+B,MAAM,GAAD,OAAI9M,EAAJ,YACPkN,MAAK,SAAAC,GACF,GAAIA,EAASC,GAET,OAAOD,EAGP,IAAIE,EAAQ,IAAIC,MAAJ,gBAAmBH,EAASI,OAA5B,aAAuCJ,EAASK,aAE5D,MADAH,EAAMF,SAAWA,EACXE,KAGV,SAAAA,GAEI,MADc,IAAIC,MAAMD,EAAMO,YAGrCV,MAAK,SAAAC,GAAQ,OAAIA,EAASM,UAC1BP,MAAK,SAAAjD,GAAO,OAAI0C,EAAS1B,GAAWhB,OACpC0D,OAAM,SAAAN,GAAK,OAAIV,EAAS3B,GAAcqC,EAAMO,iBEpJjDvE,aAAc,SAAC0E,GAAD,OAAcpB,EFsKJ,SAAC,GAAD,IAAEqB,EAAF,EAAEA,UAAWC,EAAb,EAAaA,SAAUC,EAAvB,EAAuBA,OAAQC,EAA/B,EAA+BA,MAAOC,EAAtC,EAAsCA,MAAOC,EAA7C,EAA6CA,YAAaT,EAA1D,EAA0DA,QAA1D,OAAuE,SAACjB,GAEhG,IAAM2B,EAAc,CAChBN,UAAWA,EACXC,SAAUA,EACVC,OAAQA,EACRC,MAAOA,EACPC,MAAOA,EACPC,YAAaA,EACbT,QAASA,GAIb,OAFAU,EAAYnL,MAAO,IAAID,MAAO2J,cAEvBC,MAAM,GAAD,OAAI9M,EAAJ,YAAuB,CAC/B+M,OAAQ,OACRhD,KAAMb,KAAKC,UAAUmF,GACrBtB,QAAS,CACL,eAAgB,oBAEpBC,YAAa,gBAEZC,MAAK,SAAAC,GACF,GAAIA,EAASC,GAEV,OAAOD,EAGN,IAAIE,EAAQ,IAAIC,MAAJ,gBAAmBH,EAASI,OAA5B,aAAuCJ,EAASK,aAE5D,MADAH,EAAMF,SAAWA,EACXE,KAGV,SAAAA,GACI,MAAMA,KACPH,MAAK,SAAAC,GAAQ,OAAIA,EAASM,UAC5BP,MAAK,SAAAC,GAAQ,OAAInG,MAAMkC,KAAKC,UAAUgE,OAC1CQ,OAAM,SAAAN,GAAWrE,QAAQC,IAAI,gBAAiBoE,EAAMO,SAAU5G,MAAM,8CAAD,OAA+CqG,EAAMO,cE1MxFvE,CAAa0E,QA6E5BrB,CAA6CxB,K,wDC1G1DqD,GAAS,WAAqE,IAApElL,EAAmE,uDAA3D,CAAEjC,WAAW,EAAMC,QAAS,KAAMJ,OAAQ,IAAMuN,EAAW,uCACtF,OAAQA,EAAO9I,MAEX,IFDkB,aEEd,OAAO,gBAAKrC,EAAZ,CAAmBjC,WAAW,EAAOC,QAAS,KAAMJ,OAAQuN,EAAOjE,UAEvE,IFNsB,iBEOlB,OAAO,gBAAKlH,EAAZ,CAAmBjC,WAAW,EAAMC,QAAS,KAAMJ,OAAQ,KAE/D,IFRqB,gBESjB,OAAO,gBAAKoC,EAAZ,CAAmBjC,WAAW,EAAOC,QAASmN,EAAOjE,UAEzD,QACI,OAAOlH,ICdNoL,GAAW,WAAoD,IAAnDpL,EAAkD,uDAA1C,CAAEhC,QAAS,KAAMkB,SAAS,IAAKiM,EAAW,uCACzE,OAAQA,EAAO9I,MACb,IHEwB,eGDtB,OAAO,gBAAIrC,EAAX,CAAkBhC,QAAS,KAAMkB,SAAUiM,EAAOjE,UAEpD,IHA2B,kBGCzB,OAAO,gBAAIlH,EAAX,CAAkBhC,QAASmN,EAAOjE,UAEpC,IHTuB,cGUnB,IAAI7H,EAAU8L,EAAOjE,QACrB,OAAO,gBAAKlH,EAAZ,CAAmBd,SAAUc,EAAMd,SAASmM,OAAOhM,KAEvD,QACE,OAAOW,ICZAsL,GAAa,WAAyE,IAAxEtL,EAAuE,uDAA/D,CAAEjC,WAAW,EAAMC,QAAS,KAAM6K,WAAY,IAAMsC,EAAW,uCAC9F,OAAQA,EAAO9I,MAEX,IJGkB,aIFd,OAAO,gBAAKrC,EAAZ,CAAmBjC,WAAW,EAAOC,QAAS,KAAM6K,WAAYsC,EAAOjE,UAE3E,IJDsB,iBIElB,OAAO,gBAAKlH,EAAZ,CAAmBjC,WAAW,EAAMC,QAAS,KAAM6K,WAAY,KAEnE,IJFqB,gBIGjB,OAAO,gBAAK7I,EAAZ,CAAmBjC,WAAW,EAAOC,QAASmN,EAAOjE,UAEzD,QACI,OAAOlH,ICbNuL,GAAU,WAAsE,IAArEvL,EAAoE,uDAA5D,CAAEjC,WAAW,EAAMC,QAAS,KAAM4I,QAAS,IAAMuE,EAAW,uCACxF,OAAQA,EAAO9I,MAEX,ILQmB,cKPf,OAAO,gBAAKrC,EAAZ,CAAmBjC,WAAW,EAAOC,QAAS,KAAM4I,QAASuE,EAAOjE,UAExE,ILGuB,kBKFnB,OAAO,gBAAKlH,EAAZ,CAAmBjC,WAAW,EAAMC,QAAS,KAAM4I,QAAS,KAEhE,ILCsB,iBKAlB,OAAO,gBAAK5G,EAAZ,CAAmBjC,WAAW,EAAOC,QAASmN,EAAOjE,UAEzD,QACI,OAAOlH,ICfNwL,GAAkB,CAC3Bb,UAAW,GACXC,SAAU,GACVC,OAAQ,GACRC,MAAO,GACPC,OAAO,EACPC,YAAa,OACbT,QAAS,ICCPkB,GCKYC,uBACVC,2BAAgB,cACZ/N,OAAQsN,GACRhM,SAAUkM,GACVvC,WAAYyC,GACZ1E,QAAS2E,IACNK,sBAAY,CACXlB,SAAUc,OAGlBK,2BAAgBC,KAAOC,ODIhBC,G,iLAbX,OACE,kBAAC,YAAD,CAAUP,MAAOA,IACf,kBAAC,IAAD,KACE,yBAAK/O,UAAU,OACb,kBAAC,GAAD,a,GARM6F,aEEE0J,QACW,cAA7BC,OAAO7D,SAAS8D,UAEe,UAA7BD,OAAO7D,SAAS8D,UAEhBD,OAAO7D,SAAS8D,SAASnD,MACvB,2DCTNoD,IAASC,OAAO,kBAAC,GAAD,MAASC,SAASC,eAAe,SD0H3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAM7C,MAAK,SAAA8C,GACjCA,EAAaC,kB","file":"static/js/main.7da7374e.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nexport const Loading = () => {\r\n    return(\r\n        <div className=\"col-12\">\r\n            <span className=\"fa fa-spinner fa-pulse fa-3x fa-fw text-primary\"></span>\r\n            <p>Loading . . .</p>\r\n        </div>\r\n    );\r\n};","export const baseUrl = 'http://localhost:3011/';","import React from 'react';\r\nimport { Card, CardImg, CardImgOverlay, CardTitle, Breadcrumb, BreadcrumbItem } from 'reactstrap';\r\nimport { Link } from 'react-router-dom';\r\nimport { Loading } from './LoadingComponent';\r\nimport { baseUrl } from '../shared/baseUrl';\r\n\r\nfunction RenderMenuItem({ dish }) {\r\n    return (\r\n        <Card>\r\n            <Link to={`/menu/${dish.id}`} >\r\n                <CardImg width=\"100%\" src={baseUrl + dish.image} alt={dish.name} />\r\n                <CardImgOverlay>\r\n                    <CardTitle>{dish.name}</CardTitle>\r\n                </CardImgOverlay>\r\n            </Link>\r\n        </Card>\r\n    );\r\n}\r\n\r\nconst Menu = (props) => {\r\n\r\n    const menu = props.dishes.dishes.map((dish) => {\r\n        return (\r\n            <div key={dish.id} className=\"col-12 col-md-5 m-1\">\r\n                <RenderMenuItem dish={dish} />\r\n            </div>\r\n        );\r\n    });\r\n\r\n    if (props.dishes.isLoading)\r\n    {\r\n        return (\r\n            <div className=\"container\">\r\n                <div className=\"row\">\r\n                    <Loading />\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n    else if (props.dishes.errMess)\r\n    {\r\n        return (\r\n            <div className=\"container\">\r\n                <div className=\"row\">\r\n                    <div className=\"col-12\">\r\n                        <h4>{props.dishes.errMess}</h4>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n    else\r\n        return (\r\n            <div className=\"container\">\r\n                <div className=\"row\">\r\n                    <Breadcrumb>\r\n                        <BreadcrumbItem><Link to=\"/home\">Home</Link></BreadcrumbItem>\r\n                        <BreadcrumbItem active>Menu</BreadcrumbItem>\r\n                    </Breadcrumb>\r\n                    <div className=\"col-12\">\r\n                        <h3>Menu</h3>\r\n                        <hr />\r\n                    </div>\r\n                </div>\r\n                <div className=\"row\">\r\n                    {menu}\r\n                </div>\r\n            </div>\r\n        );\r\n}\r\n\r\n\r\n\r\nexport default Menu;","\r\nimport React, { Component } from 'react';\r\n\r\nimport {\r\n    Card, CardImg, CardText, CardBody,\r\n    CardTitle, Breadcrumb, BreadcrumbItem,\r\n    Button, Modal, ModalHeader, ModalBody, Row, Col, Label\r\n} from 'reactstrap';\r\nimport { Link } from 'react-router-dom';\r\nimport { Control, LocalForm, Errors } from 'react-redux-form';\r\nimport { Loading } from './LoadingComponent';\r\nimport { baseUrl } from '../shared/baseUrl';\r\nimport { FadeTransform, Fade, Stagger } from 'react-animation-components';\r\n\r\nconst required = (val) => val && val.length;\r\nconst maxLength = (len) => (val) => !(val) || (val.length <= len);\r\nconst minLength = (len) => (val) => val && (val.length >= len);\r\n\r\n\r\nfunction RenderDish({ dish }) {\r\n\r\n    return (\r\n        <FadeTransform in\r\n            transformProps={{\r\n                exitTransform: 'scale(0.5) translateY(-50%)'\r\n            }}>\r\n            <Card>\r\n                <CardImg top src={baseUrl + dish.image} alt={dish.name} />\r\n                <CardBody>\r\n                    <CardTitle>{dish.name}</CardTitle>\r\n                    <CardText>{dish.description}</CardText>\r\n                </CardBody>\r\n            </Card>\r\n        </FadeTransform>\r\n    );\r\n}\r\n\r\n\r\nfunction RenderComments({ comments, postComment, dishId }) {\r\n    if (comments != null)\r\n        return (\r\n            <div>\r\n                <h4>Comments</h4>\r\n                <ul className=\"list-unstyled\">\r\n                    <Stagger in>\r\n                        {comments.map(comment =>\r\n                            <Fade in>\r\n                                <li key={comment.id} >{comment.comment}<br />-- {comment.author}, {new Intl.DateTimeFormat('en-US', {\r\n                                    year: 'numeric',\r\n                                    month: 'long',\r\n                                    day: '2-digit'\r\n                                }).format(new Date(comment.date))}</li>\r\n                            </Fade>\r\n                        )}\r\n                    </Stagger>\r\n                </ul>\r\n                <CommentForm dishId={dishId} postComment={postComment} />\r\n            </div>\r\n        );\r\n    else\r\n        return (\r\n            <div></div>\r\n        );\r\n    //Each comment should be displayed on two lines, the first one showing the comment, and the second line showing the comment author's name and the date.\r\n\r\n}\r\n\r\nclass CommentForm extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            isModalOpen: false\r\n        };\r\n\r\n        this.toggleModal = this.toggleModal.bind(this);\r\n        this.handleSubmitComment = this.handleSubmitComment.bind(this);\r\n    }\r\n\r\n    toggleModal() {\r\n        this.setState({ isModalOpen: !this.state.isModalOpen });\r\n    }\r\n\r\n    handleSubmitComment(values) {\r\n        this.toggleModal();\r\n        this.props.postComment(this.props.dishId, values.rating, values.author, values.comment);\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <>\r\n                <Button outline onClick={this.toggleModal}><span className=\"fa fa-pencil fa-lg\"></span>  Submit Comment</Button>\r\n                <Modal isOpen={this.state.isModalOpen} toggle={this.toggleModal}>\r\n                    <ModalHeader toggle={this.toggleModal}>Submit Comment</ModalHeader>\r\n                    <ModalBody>\r\n                        <LocalForm onSubmit={(values) => this.handleSubmitComment(values)}>\r\n                            <Row className=\"form-group\">\r\n                                <Label htmlFor=\"rating\" md={12}>Rating</Label>\r\n                                <Col md={12}>\r\n                                    <Control.select model=\".rating\" defaultValue=\"3\" id=\"rating\" name=\"rating\" placeholder=\"Rating\" className=\"form-control\">\r\n                                        <option value='1'>1</option>\r\n                                        <option value='2'>2</option>\r\n                                        <option value='3'>3</option>\r\n                                        <option value='4'>4</option>\r\n                                        <option value='5'>5</option>\r\n                                    </Control.select>\r\n                                </Col>\r\n                            </Row>\r\n                            <Row className=\"form-group\">\r\n                                <Label htmlFor=\"author\" md={12}>Your Name</Label>\r\n                                <Col md={12}>\r\n                                    <Control.text model=\".author\" id=\"author\" name=\"author\" placeholder=\"Your Name\" className=\"form-control\"\r\n                                        validators={{\r\n                                            required,\r\n                                            minLength: minLength(3),\r\n                                            maxLength: maxLength(15)\r\n                                        }}\r\n                                    />\r\n                                    <Errors className=\"text-danger\" model=\".author\" show=\"touched\"\r\n                                        messages={{\r\n                                            required: 'Required',\r\n                                            minLength: 'Must be greater than 2 characters',\r\n                                            maxLength: 'Must be 15 characters or less'\r\n                                        }}\r\n                                    />\r\n                                </Col>\r\n                            </Row>\r\n                            <Row className=\"form-group\">\r\n                                <Label htmlFor=\"comment\" md={12}>Comment</Label>\r\n                                <Col md={12}>\r\n                                    <Control.textarea model=\".comment\" id=\"comment\" name=\"comment\" rows=\"6\" className=\"form-control\" />\r\n                                </Col>\r\n                            </Row>\r\n                            <Row className=\"form-group\">\r\n                                <Col md={{ size: 10, offset: 0 }}>\r\n                                    <Button type=\"submit\" color=\"primary\"> Submit </Button>\r\n                                </Col>\r\n                            </Row>\r\n                        </LocalForm>\r\n                    </ModalBody>\r\n                </Modal>\r\n            </>\r\n        );\r\n    }\r\n}\r\n\r\nconst DishDetail = (props) => {\r\n\r\n    if (props.isLoading)\r\n    {\r\n        return (\r\n            <div className=\"container\">\r\n                <div className=\"row\">\r\n                    <Loading />\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n    else if (props.errMess)\r\n    {\r\n        return (\r\n            <div className=\"container\">\r\n                <div className=\"row\">\r\n                    <h4>{props.errMess}</h4>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n    else if (props.dish != null)\r\n        return (\r\n            <div className=\"container\">\r\n                <div className=\"row\">\r\n                    <Breadcrumb>\r\n                        <BreadcrumbItem><Link to=\"/menu\">Menu</Link></BreadcrumbItem>\r\n                        <BreadcrumbItem active>{props.dish.name}</BreadcrumbItem>\r\n                    </Breadcrumb>\r\n                    <div className=\"col-12\">\r\n                        <h3>{props.dish.name}</h3>\r\n                        <hr />\r\n                    </div>\r\n                </div>\r\n                <div className=\"row\">\r\n                    <div className=\"col-12 col-md-5 m-1\">\r\n                        <RenderDish dish={props.dish} />\r\n                    </div>\r\n                    <div className=\"col-12 col-md-5 m-1\">\r\n                        <RenderComments comments={props.comments} postComment={props.postComment} dishId={props.dish.id} />\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    else\r\n        return (\r\n            <div></div >\r\n        );\r\n}\r\n\r\nexport default DishDetail;","import React from 'react';\r\nimport {\r\n    Card, CardImg, CardText, CardBody,\r\n    CardTitle, CardSubtitle\r\n} from 'reactstrap';\r\nimport { Loading } from './LoadingComponent';\r\nimport { baseUrl } from '../shared/baseUrl';\r\nimport { FadeTransform } from 'react-animation-components';\r\n\r\nfunction RenderCard({ item, isLoading, errMess }) {\r\n    if (isLoading)\r\n    {\r\n        return (\r\n            <Loading />\r\n        );\r\n    }\r\n    else if (errMess)\r\n    {\r\n        return (\r\n            <h4>{errMess}</h4>\r\n        );\r\n    }\r\n    else\r\n        return (\r\n            <FadeTransform\r\n                in\r\n                transformProps={{\r\n                    exitTransform: 'scale(0.5) translateY(-50%)'\r\n                }}>\r\n                <Card>\r\n                    <CardImg src={baseUrl + item.image} alt={item.name} />\r\n                    <CardBody>\r\n                        <CardTitle>{item.name}</CardTitle>\r\n                        {item.designation ? <CardSubtitle>{item.designation}</CardSubtitle> : null}\r\n                        <CardText>{item.description}</CardText>\r\n                    </CardBody>\r\n                </Card>\r\n            </FadeTransform>\r\n        );\r\n\r\n}\r\n\r\nfunction Home(props) {\r\n    return (\r\n        <div className=\"container\">\r\n            <div className=\"row align-items-start\">\r\n                <div className=\"col-12 col-md m-1\">\r\n                    <RenderCard item={props.dish} isLoading={props.dishesLoading} errMess={props.dishesErrMess} />\r\n                </div>\r\n                <div className=\"col-12 col-md m-1\">\r\n                    <RenderCard item={props.promotion} isLoading={props.promoLoading} errMess={props.promoErrMess} />\r\n                </div>\r\n                <div className=\"col-12 col-md m-1\">\r\n                    <RenderCard item={props.leader} isLoading={props.leaderLoading} errMess={props.leaderErrMess}  />\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Home;","import React, { Component } from 'react';\r\nimport { Navbar, NavbarBrand, Nav, NavbarToggler, Collapse, NavItem, Jumbotron, Button, Modal, ModalHeader, ModalBody, Form, FormGroup, Input, Label } from 'reactstrap';\r\nimport { NavLink } from 'react-router-dom';\r\n\r\nclass Header extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            isNavOpen: false,\r\n            isModalOpen: false\r\n        };\r\n\r\n        this.toggleNav = this.toggleNav.bind(this);\r\n        this.toggleModal = this.toggleModal.bind(this);\r\n        this.handleLogin = this.handleLogin.bind(this);\r\n    }\r\n\r\n    toggleNav() {\r\n        this.setState({\r\n            isNavOpen: !this.state.isNavOpen\r\n        });\r\n    }\r\n\r\n    toggleModal() {\r\n        this.setState({\r\n            isModalOpen: !this.state.isModalOpen\r\n        });\r\n    }\r\n\r\n    handleLogin(event) {\r\n        this.toggleModal();\r\n        alert(\"Username: \" + this.username.value + \" Password: \" + this.password.value\r\n            + \" Remember: \" + this.remember.checked);\r\n        event.preventDefault();\r\n\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <>\r\n                <Navbar dark expand=\"md\">\r\n                    <div className=\"container\">\r\n                        <NavbarToggler onClick={this.toggleNav} />\r\n                        <NavbarBrand className=\"mr-auto\" href=\"/\"><img src='assets/images/logo.png' height=\"30\" width=\"41\" alt='Ristorante Con Fusion' /></NavbarBrand>\r\n                        <Collapse isOpen={this.state.isNavOpen} navbar>\r\n                            <Nav navbar>\r\n                                <NavItem>\r\n                                    <NavLink className=\"nav-link\" to='/home'><span className=\"fa fa-home fa-lg\"></span> Home</NavLink>\r\n                                </NavItem>\r\n                                <NavItem>\r\n                                    <NavLink className=\"nav-link\" to='/aboutus'><span className=\"fa fa-info fa-lg\"></span> About Us</NavLink>\r\n                                </NavItem>\r\n                                <NavItem>\r\n                                    <NavLink className=\"nav-link\" to='/menu'><span className=\"fa fa-list fa-lg\"></span> Menu</NavLink>\r\n                                </NavItem>\r\n                                <NavItem>\r\n                                    <NavLink className=\"nav-link\" to='/contactus'><span className=\"fa fa-address-card fa-lg\"></span> Contact Us</NavLink>\r\n                                </NavItem>\r\n                            </Nav>\r\n                            <Nav className=\"ml-auto\" navbar>\r\n                                <NavItem>\r\n                                    <Button outline onClick={this.toggleModal}><span className=\"fa fa-sign-in fa-lg\"></span> Login</Button>\r\n                                </NavItem>\r\n                            </Nav>\r\n                        </Collapse>\r\n                    </div>\r\n                </Navbar>\r\n                <Jumbotron>\r\n                    <div className=\"container\">\r\n                        <div className=\"row row-header\">\r\n                            <div className=\"col-12 col-sm-6\">\r\n                                <h1>Ristorante con Fusion</h1>\r\n                                <p>We take inspiration from the World's best cuisines, and create a unique fusion experience. Our lipsmacking creations will tickle your culinary senses!</p>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </Jumbotron>\r\n                <Modal isOpen={this.state.isModalOpen} toggle={this.toggleModal}>\r\n                    <ModalHeader toggle={this.toggleModal}>Login</ModalHeader>\r\n                    <ModalBody>\r\n                        <Form onSubmit={this.handleLogin}>\r\n                            <FormGroup>\r\n                                <Label htmlFor=\"username\">Username</Label>\r\n                                <Input type=\"text\" id=\"username\" name=\"username\"\r\n                                    innerRef={(input) => this.username = input} />\r\n                            </FormGroup>\r\n                            <FormGroup>\r\n                                <Label htmlFor=\"password\">Password</Label>\r\n                                <Input type=\"password\" id=\"password\" name=\"password\"\r\n                                    innerRef={(input) => this.password = input} />\r\n                            </FormGroup>\r\n                            <FormGroup check>\r\n                                <Label check>\r\n                                    <Input type=\"checkbox\" name=\"remember\"\r\n                                        innerRef={(input) => this.remember = input} />\r\n                                    Remember me\r\n                                </Label>\r\n                            </FormGroup>\r\n                            <Button type=\"submit\" value=\"submit\" color=\"primary\">Login</Button>\r\n                        </Form>\r\n                    </ModalBody>\r\n                </Modal>\r\n            </>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Header;","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\n\r\nconst Footer = () => {\r\n\r\n\r\n    return (\r\n        <>\r\n            <div className=\"footer\">\r\n                <div className=\"container\">\r\n                    <div className=\"row justify-content-center\">\r\n                        <div className=\"col-4 offset-1 col-sm-2\">\r\n                            <h5>Links</h5>\r\n                            <ul className=\"list-unstyled\">\r\n                                <li><Link to='/home'>Home</Link></li>\r\n                                <li><Link to='/aboutus'>About Us</Link></li>\r\n                                <li><Link to='/menu'>Menu</Link></li>\r\n                                <li><Link to='/contactus'>Contact Us</Link></li>\r\n                            </ul>\r\n                        </div>\r\n                        <div className=\"col-7 col-sm-5\">\r\n                            <h5>Our Address</h5>\r\n                            <address>\r\n                                121, Clear Water Bay Road<br />\r\n                                Clear Water Bay, Kowloon<br />\r\n                                HONG KONG<br />\r\n                                <i className=\"fa fa-phone fa-lg\"></i>: +852 1234 5678<br />\r\n                                <i className=\"fa fa-fax fa-lg\"></i>: +852 8765 4321<br />\r\n                                <i className=\"fa fa-envelope fa-lg\"></i>: <a href=\"mailto:confusion@food.net\">\r\n                                    confusion@food.net</a>\r\n                            </address>\r\n                        </div>\r\n                        <div className=\"col-12 col-sm-4 align-self-center\">\r\n                            <div className=\"text-center\">\r\n                                <a className=\"btn btn-social-icon btn-google\" href=\"http://google.com/+\"><i className=\"fa fa-google-plus\"></i></a>\r\n                                <a className=\"btn btn-social-icon btn-facebook\" href=\"http://www.facebook.com/profile.php?id=\"><i className=\"fa fa-facebook\"></i></a>\r\n                                <a className=\"btn btn-social-icon btn-linkedin\" href=\"http://www.linkedin.com/in/\"><i className=\"fa fa-linkedin\"></i></a>\r\n                                <a className=\"btn btn-social-icon btn-twitter\" href=\"http://twitter.com/\"><i className=\"fa fa-twitter\"></i></a>\r\n                                <a className=\"btn btn-social-icon btn-google\" href=\"http://youtube.com/\"><i className=\"fa fa-youtube\"></i></a>\r\n                                <a className=\"btn btn-social-icon\" href=\"mailto:\"><i className=\"fa fa-envelope-o\"></i></a>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"row justify-content-center\">\r\n                        <div className=\"col-auto\">\r\n                            <p>© Copyright 2018 Ristorante Con Fusion</p>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </>\r\n    );\r\n}\r\n\r\n\r\nexport default Footer;","import React, { Component } from 'react';\r\nimport { Breadcrumb, BreadcrumbItem, Button, Row, Col, Label } from 'reactstrap';\r\nimport { Control, Form, Errors } from 'react-redux-form';\r\nimport { Link } from 'react-router-dom';\r\n\r\n\r\n\r\nconst required = (val) => val && val.length;\r\nconst maxLength = (len) => (val) => !(val) || (val.length <= len);\r\nconst minLength = (len) => (val) => val && (val.length >= len);\r\nconst isNumber = (val) => !isNaN(Number(val));\r\nconst validEmail = (val) => /^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i.test(val);\r\n\r\nclass Contact extends Component {\r\n\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.handleSubmit = this.handleSubmit.bind(this);\r\n    }\r\n    handleSubmit(values) {\r\n        console.log('Current State is: ' + JSON.stringify(values));\r\n        this.props.resetFeedbackForm();\r\n        this.props.postFeedback(values);\r\n        // event.preventDefault();\r\n    }\r\n\r\n    render() {\r\n\r\n\r\n        return (\r\n            <div className=\"container\">\r\n                <div className=\"row\">\r\n                    <Breadcrumb>\r\n                        <BreadcrumbItem><Link to=\"/home\">Home</Link></BreadcrumbItem>\r\n                        <BreadcrumbItem active>Contact Us</BreadcrumbItem>\r\n                    </Breadcrumb>\r\n                    <div className=\"col-12\">\r\n                        <h3>Contact Us</h3>\r\n                        <hr />\r\n                    </div>\r\n                </div>\r\n                <div className=\"row row-content\">\r\n                    <div className=\"col-12\">\r\n                        <h3>Location Information</h3>\r\n                    </div>\r\n                    <div className=\"col-12 col-sm-4 offset-sm-1\">\r\n                        <h5>Our Address</h5>\r\n                        <address>\r\n                            121, Clear Water Bay Road<br />\r\n                            Clear Water Bay, Kowloon<br />\r\n                            HONG KONG<br />\r\n                            <i className=\"fa fa-phone\"></i>: +852 1234 5678<br />\r\n                            <i className=\"fa fa-fax\"></i>: +852 8765 4321<br />\r\n                            <i className=\"fa fa-envelope\"></i>: <a href=\"mailto:confusion@food.net\">confusion@food.net</a>\r\n                        </address>\r\n                    </div>\r\n                    <div className=\"col-12 col-sm-6 offset-sm-1\">\r\n                        <h5>Map of our Location</h5>\r\n                    </div>\r\n                    <div className=\"col-12 col-sm-11 offset-sm-1\">\r\n                        <div className=\"btn-group\" role=\"group\">\r\n                            <a role=\"button\" className=\"btn btn-primary\" href=\"tel:+85212345678\"><i className=\"fa fa-phone\"></i> Call</a>\r\n                            <a role=\"button\" className=\"btn btn-info\" href=\" \"><i className=\"fa fa-skype\"></i> Skype</a>\r\n                            <a role=\"button\" className=\"btn btn-success\" href=\"mailto:confusion@food.net\"><i className=\"fa fa-envelope-o\"></i> Email</a>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div className=\"row row-content\">\r\n                    <div className=\"col-12\">\r\n                        <h3>Send us your Feedback</h3>\r\n                    </div>\r\n                    <div className=\"col-12 col-md-9\">\r\n                        <Form model=\"feedback\" onSubmit={(values) => this.handleSubmit(values)}>\r\n                            <Row className=\"form-group\">\r\n                                <Label htmlFor=\"firstname\" md={2}>First Name</Label>\r\n                                <Col md={10}>\r\n                                    <Control.text model=\".firstname\" id=\"firstname\" name=\"firstname\"\r\n                                        placeholder=\"First Name\"\r\n                                        className=\"form-control\"\r\n                                        validators={{\r\n                                            required, minLength: minLength(3), maxLength: maxLength(15)\r\n                                        }}\r\n                                    />\r\n                                    <Errors\r\n                                        className=\"text-danger\"\r\n                                        model=\".firstname\"\r\n                                        show=\"touched\"\r\n                                        messages={{\r\n                                            required: 'Required',\r\n                                            minLength: 'Must be greater than 2 characters',\r\n                                            maxLength: 'Must be 15 characters or less'\r\n                                        }}\r\n                                    />\r\n                                </Col>\r\n                            </Row>\r\n                            <Row className=\"form-group\">\r\n                                <Label htmlFor=\"lastname\" md={2}>Last Name</Label>\r\n                                <Col md={10}>\r\n                                    <Control.text model=\".lastname\" id=\"lastname\" name=\"lastname\"\r\n                                        placeholder=\"Last Name\"\r\n                                        className=\"form-control\"\r\n                                        validators={{\r\n                                            required, minLength: minLength(3), maxLength: maxLength(15)\r\n                                        }}\r\n                                    />\r\n                                    <Errors\r\n                                        className=\"text-danger\"\r\n                                        model=\".lastname\"\r\n                                        show=\"touched\"\r\n                                        messages={{\r\n                                            required: 'Required',\r\n                                            minLength: 'Must be greater than 2 characters',\r\n                                            maxLength: 'Must be 15 characters or less'\r\n                                        }}\r\n                                    />\r\n                                </Col>\r\n                            </Row>\r\n                            <Row className=\"form-group\">\r\n                                <Label htmlFor=\"telnum\" md={2}>Contact Tel.</Label>\r\n                                <Col md={10}>\r\n                                    <Control.text model=\".telnum\" id=\"telnum\" name=\"telnum\"\r\n                                        placeholder=\"Tel. Number\"\r\n                                        className=\"form-control\"\r\n                                        validators={{\r\n                                            required, minLength: minLength(3), maxLength: maxLength(15), isNumber\r\n                                        }}\r\n                                    />\r\n                                    <Errors\r\n                                        className=\"text-danger\"\r\n                                        model=\".telnum\"\r\n                                        show=\"touched\"\r\n                                        messages={{\r\n                                            required: 'Required',\r\n                                            minLength: 'Must be greater than 2 numbers',\r\n                                            maxLength: 'Must be 15 numbers or less',\r\n                                            isNumber: 'Must be a number'\r\n                                        }}\r\n                                    />\r\n                                </Col>\r\n                            </Row>\r\n                            <Row className=\"form-group\">\r\n                                <Label htmlFor=\"email\" md={2}>Email</Label>\r\n                                <Col md={10}>\r\n                                    <Control.text model=\".email\" id=\"email\" name=\"email\"\r\n                                        placeholder=\"Email\"\r\n                                        className=\"form-control\"\r\n                                        validators={{\r\n                                            required, validEmail\r\n                                        }}\r\n                                    />\r\n                                    <Errors\r\n                                        className=\"text-danger\"\r\n                                        model=\".email\"\r\n                                        show=\"touched\"\r\n                                        messages={{\r\n                                            required: 'Required',\r\n                                            validEmail: 'Invalid Email Address'\r\n                                        }}\r\n                                    />\r\n                                </Col>\r\n                            </Row>\r\n                            <Row className=\"form-group\">\r\n                                <Col md={{ size: 6, offset: 2 }}>\r\n                                    <div className=\"form-check\">\r\n                                        <Label check>\r\n                                            <Control.checkbox model=\".agree\" name=\"agree\"\r\n                                                className=\"form-check-input\"\r\n                                            /> {' '}\r\n                                            <strong>May we contact you?</strong>\r\n                                        </Label>\r\n                                    </div>\r\n                                </Col>\r\n                                <Col md={{ size: 3, offset: 1 }}>\r\n                                    <Control.select model=\".contactType\" name=\"contactType\"\r\n                                        className=\"form-control\">\r\n                                        <option>Tel.</option>\r\n                                        <option>Email</option>\r\n                                    </Control.select>\r\n                                </Col>\r\n                            </Row>\r\n                            <Row className=\"form-group\">\r\n                                <Label htmlFor=\"message\" md={2}>Your Feedback</Label>\r\n                                <Col md={10}>\r\n                                    <Control.textarea model=\".message\" id=\"message\" name=\"message\"\r\n                                        rows=\"12\"\r\n                                        className=\"form-control\" />\r\n                                </Col>\r\n                            </Row>\r\n                            <Row className=\"form-group\">\r\n                                <Col md={{ size: 10, offset: 2 }}>\r\n                                    <Button type=\"submit\" color=\"primary\">\r\n                                        Send Feedback\r\n                                    </Button>\r\n                                </Col>\r\n                            </Row>\r\n                        </Form>\r\n                    </div>\r\n                </div>\r\n\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Contact;","import React from 'react';\r\nimport {\r\n    Breadcrumb,\r\n    BreadcrumbItem,\r\n    Card,\r\n    CardBody,\r\n    CardHeader,\r\n    Media\r\n} from 'reactstrap';\r\nimport { Link } from 'react-router-dom';\r\nimport { Loading } from './LoadingComponent';\r\nimport { baseUrl } from '../shared/baseUrl';\r\nimport { Fade, Stagger } from 'react-animation-components';\r\n\r\nfunction About(props) {\r\n\r\n    function RenderLeader({ leader }) {\r\n\r\n        return (\r\n            <div key={leader.id} className=\"col-12 mt-5\">\r\n                <Media tag=\"li\">\r\n                    <Media left middle>\r\n                        <Media object src={baseUrl + leader.image} alt={leader.name} />\r\n                    </Media>\r\n                    <Media body className=\"ml-5\">\r\n                        <Media heading>{leader.name}</Media>\r\n                        <p>{leader.designation}</p>\r\n                        <p>{leader.description}</p>\r\n                    </Media>\r\n                </Media>\r\n            </div>\r\n        );\r\n    }\r\n\r\n\r\n    let leaders\r\n\r\n    if (props.leaders.isLoading)\r\n    {\r\n        leaders = (<Loading />);\r\n    }\r\n    else if (props.leaders.errMess)\r\n    {\r\n        leaders = (<div className=\"col-12\"> <h4>{props.leaders.errMess}</h4> </div>);\r\n    }\r\n    else\r\n    {\r\n        leaders = (<div className=\"col-12\">\r\n            <Media list>\r\n                <Stagger in>\r\n                    {props.leaders.leaders.map((leader) =>\r\n                        <Fade in>\r\n                            <RenderLeader key={leader.id} leader={leader} />\r\n                        </Fade>\r\n                    )}\r\n                </Stagger>\r\n            </Media>\r\n        </div>);\r\n    }\r\n\r\n    return (\r\n        <div className=\"container\">\r\n            <div className=\"row\">\r\n                <Breadcrumb>\r\n                    <BreadcrumbItem><Link to=\"/home\">Home</Link></BreadcrumbItem>\r\n                    <BreadcrumbItem active>About Us</BreadcrumbItem>\r\n                </Breadcrumb>\r\n                <div className=\"col-12\">\r\n                    <h3>About Us</h3>\r\n                    <hr />\r\n                </div>\r\n            </div>\r\n            <div className=\"row row-content\">\r\n                <div className=\"col-12 col-md-6\">\r\n                    <h2>Our History</h2>\r\n                    <p>Started in 2010, Ristorante con Fusion quickly established itself as a culinary icon par excellence in Hong Kong. With its unique brand of world fusion cuisine that can be found nowhere else, it enjoys patronage from the A-list clientele in Hong Kong.  Featuring four of the best three-star Michelin chefs in the world, you never know what will arrive on your plate the next time you visit us.</p>\r\n                    <p>The restaurant traces its humble beginnings to <em>The Frying Pan</em>, a successful chain started by our CEO, Mr. Peter Pan, that featured for the first time the world's best cuisines in a pan.</p>\r\n                </div>\r\n                <div className=\"col-12 col-md-5\">\r\n                    <Card>\r\n                        <CardHeader className=\"bg-primary text-white\">Facts At a Glance</CardHeader>\r\n                        <CardBody>\r\n                            <dl className=\"row p-1\">\r\n                                <dt className=\"col-6\">Started</dt>\r\n                                <dd className=\"col-6\">3 Feb. 2013</dd>\r\n                                <dt className=\"col-6\">Major Stake Holder</dt>\r\n                                <dd className=\"col-6\">HK Fine Foods Inc.</dd>\r\n                                <dt className=\"col-6\">Last Year's Turnover</dt>\r\n                                <dd className=\"col-6\">$1,250,375</dd>\r\n                                <dt className=\"col-6\">Employees</dt>\r\n                                <dd className=\"col-6\">40</dd>\r\n                            </dl>\r\n                        </CardBody>\r\n                    </Card>\r\n                </div>\r\n                <div className=\"col-12\">\r\n                    <Card>\r\n                        <CardBody className=\"bg-faded\">\r\n                            <blockquote className=\"blockquote\">\r\n                                <p className=\"mb-0\">You better cut the pizza in four pieces because\r\n                                    I'm not hungry enough to eat six.</p>\r\n                                <footer className=\"blockquote-footer\">Yogi Berra,\r\n                                <cite title=\"Source Title\">The Wit and Wisdom of Yogi Berra,\r\n                                    P. Pepe, Diversion Books, 2014</cite>\r\n                                </footer>\r\n                            </blockquote>\r\n                        </CardBody>\r\n                    </Card>\r\n                </div>\r\n            </div>\r\n            <div className=\"row row-content\">\r\n                <div className=\"col-12\">\r\n                    <h2>Corporate Leadership</h2>\r\n                </div>\r\n                {leaders}\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default About;    ","import * as ActionTypes from './ActionTypes';\r\nimport { baseUrl } from '../shared/baseUrl';\r\n\r\nexport const addComment = (comment) => ({\r\n    type: ActionTypes.ADD_COMMENT,\r\n    payload: comment\r\n});\r\n\r\nexport const postComment = (dishId, rating, author, comment) => (dispatch) => {\r\n\r\n    const newComment = {\r\n        dishId: dishId,\r\n        rating: rating,\r\n        author: author,\r\n        comment: comment\r\n    };\r\n    newComment.date = new Date().toISOString();\r\n\r\n    return fetch(baseUrl + 'comments', {\r\n        method: \"POST\",\r\n        body: JSON.stringify(newComment),\r\n        headers: {\r\n            \"Content-Type\": \"application/json\"\r\n        },\r\n        credentials: \"same-origin\"\r\n    })\r\n        .then(response => {\r\n            if (response.ok)\r\n            {\r\n                return response;\r\n            } else\r\n            {\r\n                var error = new Error(`Error ${response.status}: ${response.statusText}`);\r\n                error.response = response;\r\n                throw error;\r\n            }\r\n        },\r\n            error => {\r\n                throw error;\r\n            })\r\n        .then(response => response.json())\r\n        .then(response => dispatch(addComment(response)))\r\n        .catch(error => { console.log('post comments', error.message); alert('Your comment could not be posted\\nError: ' + error.message); });\r\n};\r\n\r\nexport const fetchDishes = () => (dispatch) => {\r\n\r\n    dispatch(dishesLoading(true));\r\n\r\n    return fetch(baseUrl + 'dishes')\r\n        .then(response => {\r\n            if (response.ok)\r\n            {\r\n                return response;\r\n            } else\r\n            {\r\n                var error = new Error(`Error ${response.status}: ${response.statusText}`);\r\n                error.response = response;\r\n                throw error;\r\n            }\r\n        },\r\n            error => {\r\n                var errmess = new Error(error.message);\r\n                throw errmess;\r\n            })\r\n        .then(response => response.json())\r\n        .then(dishes => dispatch(addDishes(dishes)))\r\n        .catch(error => dispatch(dishesFailed(error.message)));\r\n}\r\n\r\nexport const dishesLoading = () => ({\r\n    type: ActionTypes.DISHES_LOADING\r\n});\r\n\r\nexport const dishesFailed = (errmess) => ({\r\n    type: ActionTypes.DISHES_FAILED,\r\n    payload: errmess\r\n});\r\n\r\nexport const addDishes = (dishes) => ({\r\n    type: ActionTypes.ADD_DISHES,\r\n    payload: dishes\r\n});\r\n\r\nexport const fetchComments = () => (dispatch) => {\r\n    return fetch(baseUrl + 'comments')\r\n        .then(response => {\r\n            if (response.ok)\r\n            {\r\n                return response;\r\n            } else\r\n            {\r\n                var error = new Error('Error ' + response.status + ': ' + response.statusText);\r\n                error.response = response;\r\n                throw error;\r\n            }\r\n        },\r\n            error => {\r\n                var errmess = new Error(error.message);\r\n                throw errmess;\r\n            })\r\n        .then(response => response.json())\r\n        .then(comments => dispatch(addComments(comments)))\r\n        .catch(error => dispatch(commentsFailed(error.message)));\r\n};\r\n\r\nexport const commentsFailed = (errmess) => ({\r\n    type: ActionTypes.COMMENTS_FAILED,\r\n    payload: errmess\r\n});\r\n\r\nexport const addComments = (comments) => ({\r\n    type: ActionTypes.ADD_COMMENTS,\r\n    payload: comments\r\n});\r\n\r\nexport const fetchPromos = () => (dispatch) => {\r\n\r\n    dispatch(promosLoading());\r\n\r\n    return fetch(baseUrl + 'promotions')\r\n        .then(response => {\r\n            if (response.ok)\r\n            {\r\n                return response;\r\n            } else\r\n            {\r\n                var error = new Error('Error ' + response.status + ': ' + response.statusText);\r\n                error.response = response;\r\n                throw error;\r\n            }\r\n        },\r\n            error => {\r\n                var errmess = new Error(error.message);\r\n                throw errmess;\r\n            })\r\n        .then(response => response.json())\r\n        .then(promos => dispatch(addPromos(promos)))\r\n        .catch(error => dispatch(promosFailed(error.message)));\r\n}\r\n\r\n\r\nexport const promosLoading = () => ({\r\n    type: ActionTypes.PROMOS_LOADING\r\n});\r\n\r\nexport const promosFailed = (errmess) => ({\r\n    type: ActionTypes.PROMOS_FAILED,\r\n    payload: errmess\r\n});\r\n\r\nexport const addPromos = (promos) => ({\r\n    type: ActionTypes.ADD_PROMOS,\r\n    payload: promos\r\n});\r\n\r\n\r\nexport const fetchLeaders = () => (dispatch) => {\r\n\r\n    dispatch(leadersLoading(true));\r\n\r\n    return fetch(`${baseUrl}leaders`)\r\n        .then(response => {\r\n            if (response.ok)\r\n            {\r\n                return response;\r\n            } else\r\n            {\r\n                var error = new Error(`Error ${response.status}: ${response.statusText}`);\r\n                error.response = response;\r\n                throw error;\r\n            }\r\n        },\r\n            error => {\r\n                var errmess = new Error(error.message);\r\n                throw errmess;\r\n            })\r\n        .then(response => response.json())\r\n        .then(leaders => dispatch(addLeaders(leaders)))\r\n        .catch(error => dispatch(leadersFailed(error.message)));\r\n}\r\n\r\nexport const leadersLoading = () => ({\r\n    type: ActionTypes.LEADERS_LOADING\r\n});\r\n\r\nexport const leadersFailed = (errmess) => ({\r\n    type: ActionTypes.LEADERS_FAILED,\r\n    payload: errmess\r\n});\r\n\r\nexport const addLeaders = (leaders) => ({\r\n    type: ActionTypes.ADD_LEADERS,\r\n    payload: leaders\r\n});\r\n\r\n\r\nexport const postFeedback = ({firstname, lastname, telnum, email, agree, contactType, message}) => (dispatch) => {\r\n\r\n    const newFeedback = {\r\n        firstname: firstname,\r\n        lastname: lastname,\r\n        telnum: telnum,\r\n        email: email,\r\n        agree: agree,\r\n        contactType: contactType,\r\n        message: message\r\n    };\r\n    newFeedback.date = new Date().toISOString();\r\n\r\n    return fetch(`${baseUrl}feedback`, {\r\n        method: \"POST\",\r\n        body: JSON.stringify(newFeedback),\r\n        headers: {\r\n            \"Content-Type\": \"application/json\"\r\n        },\r\n        credentials: \"same-origin\"\r\n    })\r\n        .then(response => {\r\n            if (response.ok)\r\n            {\r\n               return response;\r\n            } else\r\n            {\r\n                var error = new Error(`Error ${response.status}: ${response.statusText}`);\r\n                error.response = response;\r\n                throw error;\r\n            }\r\n        },\r\n            error => {\r\n                throw error;\r\n            }).then(response => response.json())\r\n            .then(response => alert(JSON.stringify(response)) )\r\n        .catch(error => { console.log('post feedback', error.message); alert(`Your feedback could not be posted\\\\nError: ${error.message}`); });\r\n};\r\n","export const ADD_COMMENT = 'ADD_COMMENT';\r\n\r\nexport const DISHES_LOADING = 'DISHES_LOADING';\r\nexport const DISHES_FAILED = 'DISHES_FAILED';\r\nexport const ADD_DISHES = 'ADD_DISHES';\r\nexport const ADD_COMMENTS = 'ADD_COMMENTS';\r\nexport const COMMENTS_FAILED = 'COMMENTS_FAILED';\r\nexport const PROMOS_LOADING = 'PROMOS_LOADING';\r\nexport const ADD_PROMOS = 'ADD_PROMOS';\r\nexport const PROMOS_FAILED = 'PROMOS_FAILED';\r\n\r\nexport const LEADERS_LOADING = 'LEADERS_LOADING';\r\nexport const LEADERS_FAILED = 'LEADERS_FAILED';\r\nexport const ADD_LEADERS = 'ADD_LEADERS';\r\n\r\n\r\n","import React, { Component } from 'react';\r\nimport Menu from './MenuComponent';\r\nimport DishDetail from './DishdetailComponent';\r\nimport Home from './HomeComponent';\r\nimport Header from './HeaderComponent';\r\nimport Footer from './FooterComponent';\r\nimport Contact from './ContactComponent';\r\nimport AboutUs from './AboutComponent';\r\nimport { Redirect, Route, Switch, withRouter } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\nimport { postComment, fetchDishes, fetchComments, fetchPromos, fetchLeaders, postFeedback } from '../redux/ActionCreators';\r\nimport { actions } from 'react-redux-form';\r\nimport { TransitionGroup, CSSTransition } from 'react-transition-group';\r\n\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        dishes: state.dishes,\r\n        comments: state.comments,\r\n        promotions: state.promotions,\r\n        leaders: state.leaders\r\n    }\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n    postComment: (dishId, rating, author, comment) => dispatch(postComment(dishId, rating, author, comment)),\r\n    fetchDishes: () => { dispatch(fetchDishes()) },\r\n    resetFeedbackForm: () => { dispatch(actions.reset('feedback')) },\r\n    fetchComments: () => dispatch(fetchComments()),\r\n    fetchPromos: () => dispatch(fetchPromos()),\r\n    fetchLeaders: () => dispatch(fetchLeaders()),\r\n    postFeedback: (feedback) => dispatch(postFeedback(feedback))\r\n});\r\n\r\n\r\nclass Main extends Component {\r\n\r\n\r\n    constructor(props) {\r\n        super(props);;\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.props.fetchDishes();\r\n        this.props.fetchComments();\r\n        this.props.fetchPromos();\r\n        this.props.fetchLeaders();\r\n    }\r\n\r\n    onDishSelect(dishId) {\r\n        this.setState({ selectedDish: dishId });\r\n    }\r\n\r\n\r\n\r\n    render() {\r\n\r\n        const HomePage = () => {\r\n            return (\r\n                <Home\r\n                    dish={this.props.dishes.dishes.filter((dish) => dish.featured)[0]}\r\n                    dishesLoading={this.props.dishes.isLoading}\r\n                    dishErrMess={this.props.dishes.errMess}\r\n                    promotion={this.props.promotions.promotions.filter((promo) => promo.featured)[0]}\r\n                    promoLoading={this.props.promotions.isLoading}\r\n                    promoErrMess={this.props.promotions.errMess}\r\n                    leader={this.props.leaders.leaders.filter((leader) => leader.featured)[0]}\r\n                    leaderLoading={this.props.leaders.isLoading}\r\n                    leaderErrMess={this.props.leaders.errMess}\r\n                />\r\n            );\r\n        };\r\n\r\n        const DishWithId = ({ match }) => {\r\n            return (\r\n                <DishDetail\r\n                    dish={this.props.dishes.dishes.filter((dish) => dish.id === parseInt(match.params.dishId, 10))[0]}\r\n                    isLoading={this.props.dishes.isLoading}\r\n                    errMess={this.props.dishes.errMess}\r\n                    comments={this.props.comments.comments.filter((comment) => comment.dishId === parseInt(match.params.dishId, 10))}\r\n                    commentsErrMess={this.props.comments.errMess}\r\n                    postComment={this.props.postComment}\r\n                />\r\n            );\r\n        };\r\n\r\n        return (\r\n            <div>\r\n                <Header />\r\n                <TransitionGroup>\r\n                    <CSSTransition key={this.props.location.key} classNames=\"page\" timeout={300}>\r\n                        <Switch location={this.props.location}>\r\n                            <Route path='/home' component={HomePage} />\r\n                            <Route exact path='/menu' component={() => <Menu dishes={this.props.dishes} />} />\r\n                            <Route exact path='/contactus' component={() => <Contact resetFeedbackForm={this.props.resetFeedbackForm} postFeedback={this.props.postFeedback}/>} />\r\n                            <Route exact path='/aboutus' component={() => <AboutUs leaders={this.props.leaders} />} />\r\n                            <Route path='/menu/:dishId' component={DishWithId} />\r\n                            <Redirect to=\"/home\" />\r\n                        </Switch>\r\n                    </CSSTransition>\r\n                </TransitionGroup>\r\n                <Footer />\r\n            </div>\r\n        );\r\n    }\r\n\r\n}\r\n\r\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps)(Main));","import * as ActionTypes from './ActionTypes';\r\n\r\nexport const Dishes = (state = { isLoading: true, errMess: null, dishes: [] }, action) => {\r\n    switch (action.type)\r\n    {\r\n        case ActionTypes.ADD_DISHES:\r\n            return { ...state, isLoading: false, errMess: null, dishes: action.payload };\r\n\r\n        case ActionTypes.DISHES_LOADING:\r\n            return { ...state, isLoading: true, errMess: null, dishes: [] }\r\n\r\n        case ActionTypes.DISHES_FAILED:\r\n            return { ...state, isLoading: false, errMess: action.payload };\r\n\r\n        default:\r\n            return state;\r\n    }\r\n};","import * as ActionTypes from './ActionTypes';\r\nexport const Comments = (state = { errMess: null, comments:[]}, action) => {\r\n  switch (action.type) {\r\n    case ActionTypes.ADD_COMMENTS:\r\n      return {...state, errMess: null, comments: action.payload};\r\n\r\n    case ActionTypes.COMMENTS_FAILED:\r\n      return {...state, errMess: action.payload};\r\n\r\n    case ActionTypes.ADD_COMMENT:\r\n        var comment = action.payload;\r\n        return { ...state, comments: state.comments.concat(comment)};\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};","import * as ActionTypes from './ActionTypes';\r\n\r\nexport const Promotions = (state = { isLoading: true, errMess: null, promotions: [] }, action) => {\r\n    switch (action.type)\r\n    {\r\n        case ActionTypes.ADD_PROMOS:\r\n            return { ...state, isLoading: false, errMess: null, promotions: action.payload };\r\n\r\n        case ActionTypes.PROMOS_LOADING:\r\n            return { ...state, isLoading: true, errMess: null, promotions: [] }\r\n\r\n        case ActionTypes.PROMOS_FAILED:\r\n            return { ...state, isLoading: false, errMess: action.payload };\r\n\r\n        default:\r\n            return state;\r\n    }\r\n};","import * as ActionTypes from './ActionTypes';\r\n\r\nexport const Leaders = (state = { isLoading: true, errMess: null, leaders: [] }, action) => {\r\n    switch (action.type)\r\n    {\r\n        case ActionTypes.ADD_LEADERS:\r\n            return { ...state, isLoading: false, errMess: null, leaders: action.payload };\r\n\r\n        case ActionTypes.LEADERS_LOADING:\r\n            return { ...state, isLoading: true, errMess: null, leaders: [] }\r\n\r\n        case ActionTypes.LEADERS_FAILED:\r\n            return { ...state, isLoading: false, errMess: action.payload };\r\n\r\n        default:\r\n            return state;\r\n    }\r\n};","export const InitialFeedback = {\r\n    firstname: '',\r\n    lastname: '',\r\n    telnum: '',\r\n    email: '',\r\n    agree: false,\r\n    contactType: 'Tel.',\r\n    message: ''\r\n};","import React, { Component } from 'react';\nimport Main from './components/MainComponent';\nimport { BrowserRouter } from 'react-router-dom';\nimport './App.css';\nimport { Provider } from 'react-redux';\nimport { ConfigureStore } from './redux/configureStore';\n\n\nconst store = ConfigureStore();\n\nclass App extends Component {\n\n\n  render() {\n    return (\n      <Provider store={store}>\n        <BrowserRouter>\n          <div className=\"App\">\n            <Main />\n          </div>\n        </BrowserRouter>\n      </Provider>\n    );\n  }\n\n}\n\nexport default App;\n","\r\n\r\nimport { createStore, combineReducers, applyMiddleware } from 'redux';\r\nimport thunk from 'redux-thunk';\r\nimport logger from 'redux-logger';\r\nimport { Dishes } from './dishes';\r\nimport { Comments } from './comments';\r\nimport { Promotions } from './promotions';\r\nimport { Leaders } from './leaders';\r\nimport { createForms } from 'react-redux-form';\r\nimport { InitialFeedback } from './forms';\r\n\r\nexport const ConfigureStore = () => {\r\n    const store = createStore(\r\n        combineReducers({\r\n            dishes: Dishes,\r\n            comments: Comments,\r\n            promotions: Promotions,\r\n            leaders: Leaders,\r\n            ...createForms({\r\n                feedback: InitialFeedback\r\n            })\r\n        }),\r\n        applyMiddleware(thunk, logger)\r\n    );\r\n\r\n    return store;\r\n}","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport 'font-awesome/css/font-awesome.min.css';\nimport 'bootstrap-social/bootstrap-social.css';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}